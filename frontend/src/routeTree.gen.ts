/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as LoginRouteImport } from './routes/login'
import { Route as IndexRouteImport } from './routes/index'
import { Route as SettingsIndexRouteImport } from './routes/settings/index'
import { Route as FinanceIndexRouteImport } from './routes/finance/index'
import { Route as DashboardIndexRouteImport } from './routes/dashboard/index'
import { Route as CrmIndexRouteImport } from './routes/crm/index'
import { Route as SettingsSecurityRouteImport } from './routes/settings/security'
import { Route as SettingsProfileRouteImport } from './routes/settings/profile'
import { Route as SettingsBillingRouteImport } from './routes/settings/billing'
import { Route as ErrorErrorRouteImport } from './routes/error/error'
import { Route as Error404RouteImport } from './routes/error/404'
import { Route as AuthResetPasswordRouteImport } from './routes/auth/reset-password'
import { Route as AuthRegisterRouteImport } from './routes/auth/register'
import { Route as AuthForgotPasswordRouteImport } from './routes/auth/forgot-password'
import { Route as DashboardMigrationIndexRouteImport } from './routes/dashboard/migration/index'
import { Route as DashboardCrmIndexRouteImport } from './routes/dashboard/crm/index'
import { Route as DashboardAnalyticsIndexRouteImport } from './routes/dashboard/analytics/index'

const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const SettingsIndexRoute = SettingsIndexRouteImport.update({
  id: '/settings/',
  path: '/settings/',
  getParentRoute: () => rootRouteImport,
} as any)
const FinanceIndexRoute = FinanceIndexRouteImport.update({
  id: '/finance/',
  path: '/finance/',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardIndexRoute = DashboardIndexRouteImport.update({
  id: '/dashboard/',
  path: '/dashboard/',
  getParentRoute: () => rootRouteImport,
} as any)
const CrmIndexRoute = CrmIndexRouteImport.update({
  id: '/crm/',
  path: '/crm/',
  getParentRoute: () => rootRouteImport,
} as any)
const SettingsSecurityRoute = SettingsSecurityRouteImport.update({
  id: '/settings/security',
  path: '/settings/security',
  getParentRoute: () => rootRouteImport,
} as any)
const SettingsProfileRoute = SettingsProfileRouteImport.update({
  id: '/settings/profile',
  path: '/settings/profile',
  getParentRoute: () => rootRouteImport,
} as any)
const SettingsBillingRoute = SettingsBillingRouteImport.update({
  id: '/settings/billing',
  path: '/settings/billing',
  getParentRoute: () => rootRouteImport,
} as any)
const ErrorErrorRoute = ErrorErrorRouteImport.update({
  id: '/error/error',
  path: '/error/error',
  getParentRoute: () => rootRouteImport,
} as any)
const Error404Route = Error404RouteImport.update({
  id: '/error/404',
  path: '/error/404',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthResetPasswordRoute = AuthResetPasswordRouteImport.update({
  id: '/auth/reset-password',
  path: '/auth/reset-password',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRegisterRoute = AuthRegisterRouteImport.update({
  id: '/auth/register',
  path: '/auth/register',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthForgotPasswordRoute = AuthForgotPasswordRouteImport.update({
  id: '/auth/forgot-password',
  path: '/auth/forgot-password',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardMigrationIndexRoute = DashboardMigrationIndexRouteImport.update({
  id: '/dashboard/migration/',
  path: '/dashboard/migration/',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardCrmIndexRoute = DashboardCrmIndexRouteImport.update({
  id: '/dashboard/crm/',
  path: '/dashboard/crm/',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardAnalyticsIndexRoute = DashboardAnalyticsIndexRouteImport.update({
  id: '/dashboard/analytics/',
  path: '/dashboard/analytics/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/auth/register': typeof AuthRegisterRoute
  '/auth/reset-password': typeof AuthResetPasswordRoute
  '/error/404': typeof Error404Route
  '/error/error': typeof ErrorErrorRoute
  '/settings/billing': typeof SettingsBillingRoute
  '/settings/profile': typeof SettingsProfileRoute
  '/settings/security': typeof SettingsSecurityRoute
  '/crm': typeof CrmIndexRoute
  '/dashboard': typeof DashboardIndexRoute
  '/finance': typeof FinanceIndexRoute
  '/settings': typeof SettingsIndexRoute
  '/dashboard/analytics': typeof DashboardAnalyticsIndexRoute
  '/dashboard/crm': typeof DashboardCrmIndexRoute
  '/dashboard/migration': typeof DashboardMigrationIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/auth/register': typeof AuthRegisterRoute
  '/auth/reset-password': typeof AuthResetPasswordRoute
  '/error/404': typeof Error404Route
  '/error/error': typeof ErrorErrorRoute
  '/settings/billing': typeof SettingsBillingRoute
  '/settings/profile': typeof SettingsProfileRoute
  '/settings/security': typeof SettingsSecurityRoute
  '/crm': typeof CrmIndexRoute
  '/dashboard': typeof DashboardIndexRoute
  '/finance': typeof FinanceIndexRoute
  '/settings': typeof SettingsIndexRoute
  '/dashboard/analytics': typeof DashboardAnalyticsIndexRoute
  '/dashboard/crm': typeof DashboardCrmIndexRoute
  '/dashboard/migration': typeof DashboardMigrationIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/auth/register': typeof AuthRegisterRoute
  '/auth/reset-password': typeof AuthResetPasswordRoute
  '/error/404': typeof Error404Route
  '/error/error': typeof ErrorErrorRoute
  '/settings/billing': typeof SettingsBillingRoute
  '/settings/profile': typeof SettingsProfileRoute
  '/settings/security': typeof SettingsSecurityRoute
  '/crm/': typeof CrmIndexRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/finance/': typeof FinanceIndexRoute
  '/settings/': typeof SettingsIndexRoute
  '/dashboard/analytics/': typeof DashboardAnalyticsIndexRoute
  '/dashboard/crm/': typeof DashboardCrmIndexRoute
  '/dashboard/migration/': typeof DashboardMigrationIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/login'
    | '/auth/forgot-password'
    | '/auth/register'
    | '/auth/reset-password'
    | '/error/404'
    | '/error/error'
    | '/settings/billing'
    | '/settings/profile'
    | '/settings/security'
    | '/crm'
    | '/dashboard'
    | '/finance'
    | '/settings'
    | '/dashboard/analytics'
    | '/dashboard/crm'
    | '/dashboard/migration'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/auth/forgot-password'
    | '/auth/register'
    | '/auth/reset-password'
    | '/error/404'
    | '/error/error'
    | '/settings/billing'
    | '/settings/profile'
    | '/settings/security'
    | '/crm'
    | '/dashboard'
    | '/finance'
    | '/settings'
    | '/dashboard/analytics'
    | '/dashboard/crm'
    | '/dashboard/migration'
  id:
    | '__root__'
    | '/'
    | '/login'
    | '/auth/forgot-password'
    | '/auth/register'
    | '/auth/reset-password'
    | '/error/404'
    | '/error/error'
    | '/settings/billing'
    | '/settings/profile'
    | '/settings/security'
    | '/crm/'
    | '/dashboard/'
    | '/finance/'
    | '/settings/'
    | '/dashboard/analytics/'
    | '/dashboard/crm/'
    | '/dashboard/migration/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  LoginRoute: typeof LoginRoute
  AuthForgotPasswordRoute: typeof AuthForgotPasswordRoute
  AuthRegisterRoute: typeof AuthRegisterRoute
  AuthResetPasswordRoute: typeof AuthResetPasswordRoute
  Error404Route: typeof Error404Route
  ErrorErrorRoute: typeof ErrorErrorRoute
  SettingsBillingRoute: typeof SettingsBillingRoute
  SettingsProfileRoute: typeof SettingsProfileRoute
  SettingsSecurityRoute: typeof SettingsSecurityRoute
  CrmIndexRoute: typeof CrmIndexRoute
  DashboardIndexRoute: typeof DashboardIndexRoute
  FinanceIndexRoute: typeof FinanceIndexRoute
  SettingsIndexRoute: typeof SettingsIndexRoute
  DashboardAnalyticsIndexRoute: typeof DashboardAnalyticsIndexRoute
  DashboardCrmIndexRoute: typeof DashboardCrmIndexRoute
  DashboardMigrationIndexRoute: typeof DashboardMigrationIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/settings/': {
      id: '/settings/'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/finance/': {
      id: '/finance/'
      path: '/finance'
      fullPath: '/finance'
      preLoaderRoute: typeof FinanceIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/crm/': {
      id: '/crm/'
      path: '/crm'
      fullPath: '/crm'
      preLoaderRoute: typeof CrmIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/settings/security': {
      id: '/settings/security'
      path: '/settings/security'
      fullPath: '/settings/security'
      preLoaderRoute: typeof SettingsSecurityRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/settings/profile': {
      id: '/settings/profile'
      path: '/settings/profile'
      fullPath: '/settings/profile'
      preLoaderRoute: typeof SettingsProfileRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/settings/billing': {
      id: '/settings/billing'
      path: '/settings/billing'
      fullPath: '/settings/billing'
      preLoaderRoute: typeof SettingsBillingRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/error/error': {
      id: '/error/error'
      path: '/error/error'
      fullPath: '/error/error'
      preLoaderRoute: typeof ErrorErrorRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/error/404': {
      id: '/error/404'
      path: '/error/404'
      fullPath: '/error/404'
      preLoaderRoute: typeof Error404RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/reset-password': {
      id: '/auth/reset-password'
      path: '/auth/reset-password'
      fullPath: '/auth/reset-password'
      preLoaderRoute: typeof AuthResetPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/register': {
      id: '/auth/register'
      path: '/auth/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthRegisterRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/forgot-password': {
      id: '/auth/forgot-password'
      path: '/auth/forgot-password'
      fullPath: '/auth/forgot-password'
      preLoaderRoute: typeof AuthForgotPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/migration/': {
      id: '/dashboard/migration/'
      path: '/dashboard/migration'
      fullPath: '/dashboard/migration'
      preLoaderRoute: typeof DashboardMigrationIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/crm/': {
      id: '/dashboard/crm/'
      path: '/dashboard/crm'
      fullPath: '/dashboard/crm'
      preLoaderRoute: typeof DashboardCrmIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/analytics/': {
      id: '/dashboard/analytics/'
      path: '/dashboard/analytics'
      fullPath: '/dashboard/analytics'
      preLoaderRoute: typeof DashboardAnalyticsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LoginRoute: LoginRoute,
  AuthForgotPasswordRoute: AuthForgotPasswordRoute,
  AuthRegisterRoute: AuthRegisterRoute,
  AuthResetPasswordRoute: AuthResetPasswordRoute,
  Error404Route: Error404Route,
  ErrorErrorRoute: ErrorErrorRoute,
  SettingsBillingRoute: SettingsBillingRoute,
  SettingsProfileRoute: SettingsProfileRoute,
  SettingsSecurityRoute: SettingsSecurityRoute,
  CrmIndexRoute: CrmIndexRoute,
  DashboardIndexRoute: DashboardIndexRoute,
  FinanceIndexRoute: FinanceIndexRoute,
  SettingsIndexRoute: SettingsIndexRoute,
  DashboardAnalyticsIndexRoute: DashboardAnalyticsIndexRoute,
  DashboardCrmIndexRoute: DashboardCrmIndexRoute,
  DashboardMigrationIndexRoute: DashboardMigrationIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
