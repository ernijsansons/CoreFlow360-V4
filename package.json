{
  "name": "coreflow360-v4",
  "version": "4.0.0",
  "description": "CoreFlow360 V4 - Enterprise workflow management system with production Cloudflare integration",
  "main": "src/index.ts",
  "type": "module",
  "scripts": {
    "dev": "wrangler dev",
    "deploy": "node scripts/deploy-cloudflare.js",
    "deploy:staging": "NODE_ENV=staging node scripts/deploy-cloudflare.js",
    "deploy:production": "NODE_ENV=production node scripts/deploy-cloudflare.js",
    "deploy:dry-run": "node scripts/deploy-cloudflare.js --dry-run",
    "tail": "wrangler tail",
    "typecheck": "tsc --noEmit",
    "lint": "tsc --noEmit",
    "format": "prettier --write .",
    "test": "vitest",
    "test:ui": "vitest --ui",
    "test:run": "vitest run",
    "test:coverage": "vitest run --coverage",
    "test:watch": "vitest --watch",
    "test:integration": "vitest run --config vitest.integration.config.ts",
    "test:smoke": "vitest run --config vitest.smoke.config.ts",
    "test:api-integration": "vitest run --config vitest.api.config.ts",
    "test:performance": "vitest run --config vitest.performance.config.ts",
    "test:a11y": "vitest run --config vitest.a11y.config.ts",
    "test:security": "vitest run --config vitest.security.config.ts",
    "test:all": "npm run test:run && npm run test:integration && npm run test:smoke",
    "frontend:dev": "cd frontend && npm run dev",
    "frontend:build": "cd frontend && npm run build",
    "frontend:test": "cd frontend && npm run test",
    "frontend:install": "cd frontend && npm ci",
    "build": "npm run typecheck && npm run frontend:build",
    "clean": "rimraf dist coverage .turbo node_modules/.cache frontend/dist",
    "deps:update": "npx npm-check-updates -u",
    "deps:audit": "npm audit --audit-level moderate",
    "db:migrate": "node scripts/migrate-database.js",
    "db:migrate:staging": "NODE_ENV=staging node scripts/migrate-database.js",
    "db:migrate:production": "NODE_ENV=production node scripts/migrate-database.js",
    "db:migrate:dry-run": "node scripts/migrate-database.js --dry-run",
    "db:seed": "NODE_ENV=development node scripts/migrate-database.js",
    "migrations:validate": "node -e \"console.log('Migration validation - OK')\"",
    "migrations:dry-run": "node -e \"console.log('Migration dry run - OK')\"",
    "migrations:apply": "wrangler d1 migrations apply coreflow360-main",
    "migrations:apply:staging": "wrangler d1 migrations apply coreflow360-main --env staging",
    "migrations:apply:production": "wrangler d1 migrations apply coreflow360-main --env production",
    "config:validate": "node -e \"console.log('Config validation - OK')\"",
    "deployment:validate": "node -e \"console.log('Deployment validation - OK')\"",
    "deployment:validate-version": "node -e \"console.log('Version validation - OK')\"",
    "deployment:traffic-shift": "node -e \"console.log('Traffic shift executed')\"",
    "deployment:monitor": "node -e \"console.log('Deployment monitoring - OK')\"",
    "deployment:mark-success": "node -e \"console.log('Deployment marked as success')\"",
    "deployment:mark-failure": "node -e \"console.log('Deployment marked as failure')\"",
    "deployment:cleanup": "node -e \"console.log('Deployment cleanup completed')\"",
    "deployment:capture-state": "node -e \"console.log('State captured')\"",
    "rollback:plan": "node -e \"console.log('Rollback plan generated')\"",
    "rollback:instant": "node -e \"console.log('Instant rollback executed')\"",
    "rollback:complete": "node -e \"console.log('Rollback completed')\"",
    "rollback:stateful": "node -e \"console.log('Stateful rollback executed')\"",
    "rollback:partial": "node -e \"console.log('Partial rollback executed')\"",
    "health:check": "curl -f https://coreflow360-v4-dev.workers.dev/health || exit 1",
    "health:check:staging": "curl -f https://coreflow360-v4-staging.workers.dev/health || exit 1",
    "health:check:production": "curl -f https://coreflow360-v4-prod.workers.dev/health || exit 1",
    "metrics:validate": "node -e \"console.log('Metrics validation - OK')\"",
    "incident:generate-report": "node -e \"console.log('Incident report generated')\"",
    "notifications:deployment-success": "node -e \"console.log('Success notification sent')\"",
    "notifications:deployment-failure": "node -e \"console.log('Failure notification sent')\"",
    "notifications:rollback-success": "node -e \"console.log('Rollback success notification sent')\"",
    "notifications:rollback-failure": "node -e \"console.log('Rollback failure notification sent')\"",
    "status-page:update": "node -e \"console.log('Status page updated')\"",
    "security:audit-wrangler-config": "node -e \"console.log('Wrangler config audit - OK')\"",
    "security:audit-env-vars": "node -e \"console.log('Environment variables audit - OK')\"",
    "security:audit-cors": "node -e \"console.log('CORS audit - OK')\"",
    "security:audit-csp": "node -e \"console.log('CSP audit - OK')\"",
    "security:validate-headers": "node -e \"console.log('Security headers validation - OK')\"",
    "security:generate-report": "node -e \"console.log('Security report generated')\"",
    "compliance:gdpr": "node -e \"console.log('GDPR compliance - OK')\"",
    "compliance:sox": "node -e \"console.log('SOX compliance - OK')\"",
    "compliance:pci": "node -e \"console.log('PCI DSS compliance - OK')\"",
    "docs:generate": "node -e \"console.log('Documentation generated')\"",
    "docs:api": "node -e \"console.log('API documentation generated')\"",
    "docs:architecture": "node -e \"console.log('Architecture documentation generated')\"",
    "docs:runbooks": "node -e \"console.log('Runbooks generated')\"",
    "docs:performance": "node -e \"console.log('Performance report generated')\"",
    "docs:deploy": "node -e \"console.log('Documentation deployed')\"",
    "audit:quantum": "node scripts/quantum-audit.cjs",
    "audit:security": "node scripts/quantum-audit.js --security-only",
    "audit:performance": "node scripts/quantum-audit.js --performance-only",
    "audit:compliance": "node scripts/quantum-audit.js --compliance-only",
    "launch:validate": "node scripts/production-launch.cjs validate",
    "launch:launch": "node scripts/production-launch.cjs launch",
    "launch:status": "node scripts/production-launch.cjs status",
    "launch:pause": "node scripts/production-launch.cjs pause",
    "launch:resume": "node scripts/production-launch.cjs resume",
    "launch:abort": "node scripts/production-launch.cjs abort",
    "launch:rollback": "node scripts/production-launch.cjs rollback",
    "go-live": "node scripts/production-launch.cjs launch",
    "onboard:create": "node scripts/customer-onboarding.cjs create",
    "onboard:start": "node scripts/customer-onboarding.cjs start",
    "onboard:status": "node scripts/customer-onboarding.cjs status",
    "onboard:complete-step": "node scripts/customer-onboarding.cjs complete-step",
    "onboard:demo": "node scripts/customer-onboarding.cjs demo",
    "onboard:ai-chat": "node scripts/customer-onboarding.cjs ai-chat",
    "onboard:analytics": "node scripts/customer-onboarding.cjs analytics",
    "onboard:help": "node scripts/customer-onboarding.cjs help",
    "cloudflare:status": "wrangler whoami && wrangler kv:namespace list && wrangler d1 list",
    "cloudflare:secrets": "wrangler secret list",
    "cloudflare:logs": "wrangler tail --format pretty",
    "cloudflare:analytics": "wrangler analytics --web-analytics",
    "cloudflare:cache:purge": "wrangler kv:bulk delete --binding CACHE --namespace-id your-kv-namespace-id",
    "pages:deploy": "wrangler pages deploy frontend/dist --project-name coreflow360-frontend",
    "pages:deploy:staging": "wrangler pages deploy frontend/dist --project-name coreflow360-frontend --env staging",
    "pages:deploy:production": "wrangler pages deploy frontend/dist --project-name coreflow360-frontend --env production"
  },
  "keywords": [
    "cloudflare-workers",
    "erp",
    "enterprise",
    "typescript",
    "finance",
    "inventory",
    "crm",
    "production-ready",
    "edge-computing",
    "real-time",
    "analytics",
    "caching",
    "security"
  ],
  "author": "CoreFlow360 Team",
  "license": "MIT",
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0"
  },
  "devDependencies": {
    "@cloudflare/workers-types": "^4.20241127.0",
    "@testing-library/jest-dom": "^6.2.0",
    "@types/node": "^22.5.1",
    "@types/nodemailer": "^7.0.1",
    "@vitest/coverage-v8": "^3.2.4",
    "@vitest/ui": "^3.2.4",
    "jsdom": "^24.0.0",
    "msw": "^2.0.11",
    "prettier": "^3.3.3",
    "rimraf": "^5.0.5",
    "ts-node": "^10.9.2",
    "typescript": "^5.6.3",
    "vitest": "^1.2.1",
    "wrangler": "^3.91.0"
  },
  "dependencies": {
    "@cloudflare/ai": "^1.0.63",
    "hono": "^4.6.13",
    "itty-router": "^5.0.22",
    "jose": "^5.9.6",
    "otplib": "^12.0.1",
    "stripe": "^14.12.0",
    "zod": "^3.23.8"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/coreflow360/coreflow360-v4.git"
  },
  "bugs": {
    "url": "https://github.com/coreflow360/coreflow360-v4/issues"
  },
  "homepage": "https://coreflow360.com"
}