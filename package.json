{
    "name": "coreflow360-v4",
    "version": "1.0.0",
    "engines": {
        "node": ">=18.0.0"
    },
    "scripts": {
        "start": "node server-simple.js",
        "dev": "node server-simple.js",
        "dev:watch": "nodemon --watch src --watch server.js --ext ts,js server.js",
        "dev:full": "concurrently \"npm run dev:watch\" \"cd frontend && npm run dev\"",
        "docker:build": "docker build -t coreflow360-v4 .",
        "docker:build:prod": "docker build --target production -t coreflow360-v4:prod .",
        "docker:dev": "docker-compose up -d",
        "docker:prod": "docker-compose -f docker-compose.yml -f docker-compose.prod.yml up -d",
        "docker:down": "docker-compose down",
        "docker:logs": "docker-compose logs -f",
        "docker:clean": "docker-compose down -v --remove-orphans && docker system prune -f",
        "docker:deploy": "bash scripts/docker-deploy.sh",
        "docker:deploy:prod": "bash scripts/docker-deploy.sh production",
        "docker:health": "docker-compose ps && curl -f http://localhost:3000/health",
        "deploy:dev": "wrangler deploy --config wrangler.development.toml",
        "deploy:staging": "wrangler deploy --config wrangler.staging.toml",
        "deploy:prod": "wrangler deploy --config wrangler.production.toml",
        "dev:cloudflare": "wrangler dev --config wrangler.development.toml",
        "preview": "wrangler dev --config wrangler.staging.toml",
        "build": "tsc && npm run bundle",
        "build:staging": "NODE_ENV=staging npm run build",
        "build:production": "NODE_ENV=production npm run build",
        "bundle": "esbuild src/index.ts --bundle --outfile=dist/worker.js --format=esm --target=es2022",
        "bundle:analyze": "npm run bundle -- --analyze",
        "test": "vitest",
        "test:coverage": "vitest run --coverage",
        "test:performance": "vitest run --config vitest.performance.config.ts",
        "test:db-performance": "vitest run src/**/*db*.perf.test.ts",
        "test:cache-performance": "vitest run src/**/*cache*.perf.test.ts",
        "test:memory-leaks": "node --expose-gc --inspect scripts/memory-leak-test.js",
        "test:integration": "vitest run tests/integration/",
        "test:e2e": "vitest run tests/e2e/",
        "test:ai-integration": "vitest run tests/integration/ai-*.test.ts",
        "test:failover": "vitest run tests/integration/failover.test.ts",
        "test:db-integrity": "vitest run tests/integration/database-integrity.test.ts",
        "test:staging-health": "node scripts/health-check.js https://coreflow360-v4-staging.workers.dev",
        "test:staging-smoke": "vitest run tests/smoke/staging.test.ts",
        "test:production-health": "node scripts/health-check.js https://api.coreflow360.com",
        "test:production-blue-health": "node scripts/health-check.js https://coreflow360-v4-prod-blue.workers.dev",
        "test:production-blue-comprehensive": "vitest run tests/production/blue-validation.test.ts",
        "test:production-comprehensive": "vitest run tests/production/",
        "test:alerting-system": "vitest run tests/monitoring/alerting.test.ts",
        "lint": "eslint src/ tests/ --ext .ts,.js",
        "lint:fix": "npm run lint -- --fix",
        "type-check": "tsc --noEmit",
        "security:scan": "npm audit && snyk test",
        "security:harden": "node scripts/security-hardening.js",
        "security:validate": "node scripts/security-validation.js",
        "optimize:staging": "node scripts/optimize-build.js staging",
        "optimize:production": "node scripts/optimize-build.js production",
        "pre-deploy:checks": "npm run lint && npm run type-check && npm run security:validate",
        "database:backup": "node scripts/backup-database.js",
        "config:validate": "node scripts/validate-config.js",
        "monitoring:setup-staging": "node scripts/setup-monitoring.js staging",
        "monitoring:activate-production": "node scripts/setup-monitoring.js production",
        "monitoring:validate-production": "node scripts/validate-monitoring.js production",
        "alerting:configure-production": "node scripts/configure-alerts.js production",
        "monitor:db-performance": "node scripts/monitor-db-performance.js",
        "monitor:cache-performance": "node scripts/monitor-cache-performance.js",
        "validate:monitoring-dashboards": "node scripts/validate-dashboards.js",
        "benchmark": "node scripts/run-benchmarks.js",
        "benchmark:db": "node scripts/benchmark-database.js",
        "benchmark:cache": "node scripts/benchmark-cache.js",
        "benchmark:api": "node scripts/benchmark-api.js",
        "db:migrate": "node scripts/run-migrations.js",
        "db:migrate:test": "NODE_ENV=test npm run db:migrate",
        "db:seed:test": "node scripts/seed-test-data.js"
    },
    "dependencies": {
        "@cloudflare/ai": "^1.2.2",
        "@hono/zod-validator": "^0.2.2",
        "express": "^4.18.2",
        "hono": "^4.6.2",
        "itty-router": "^5.0.17",
        "otplib": "^12.0.1",
        "stripe": "^16.12.0",
        "zod": "^3.23.8"
    },
    "devDependencies": {
        "@cloudflare/workers-types": "^4.20250924.0",
        "@testing-library/jest-dom": "^6.8.0",
        "@testing-library/react": "^16.3.0",
        "@testing-library/user-event": "^14.6.1",
        "@types/node": "^20.10.0",
        "@typescript-eslint/eslint-plugin": "^6.14.0",
        "@typescript-eslint/parser": "^6.14.0",
        "@vitejs/plugin-react": "^5.0.3",
        "@vitest/coverage-v8": "^3.2.4",
        "artillery": "^2.0.0",
        "concurrently": "^9.2.1",
        "esbuild": "^0.25.10",
        "eslint": "^8.55.0",
        "eslint-plugin-security": "^1.7.1",
        "jsdom": "^27.0.0",
        "lighthouse": "^12.8.2",
        "nodemon": "^3.1.10",
        "snyk": "^1.1268.0",
        "typescript": "^5.3.3",
        "vitest": "^3.2.4",
        "wrangler": "^4.39.0"
    }
}
